version: 2
jobs:
  build:
    working_directory: ~/CrisisCleanup/crisiscleanup
    parallelism: 2
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/ruby:2.4.4-node-browsers
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: crisiscleanup       
    steps:
    - checkout
    # - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Restore bundle cache
    - type: cache-restore
      key: myapp-bundle-{{ checksum "Gemfile.lock" }}

    # Restore yarn cache
    - type: cache-restore
      key: myapp-yarn-{{ checksum "yarn.lock" }}
    
    # Install gem dependencies
    - run: bundle install --path vendor/bundle
    # bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

    # Install Javascript dependencies
    - run: bin/yarn install
    
    - run: bundle exec rake assets:precompile

    # Store bundle cache
    - type: cache-save
      key: myapp-bundle-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle

    # Store yarn cache
    - type: cache-save
      key: myapp-yarn-{{ checksum "yarn.lock" }}
      paths:
        - ~/.yarn-cache    
        
    - run:
        command: bundle exec rake db:create db:schema:load --trace
        environment:
          RAILS_ENV: test
          RACK_ENV: test
    # Test
    #   This would typically be a build job when using workflows, possibly combined with build
    # This is based on your 1.0 configuration file or project settings
    - run:
        name: RAILS_ENV=test bundle exec rspec -r rspec_junit_formatter --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then RAILS_ENV=test bundle exec rspec -r rspec_junit_formatter --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml; fi
    # Teardown
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
